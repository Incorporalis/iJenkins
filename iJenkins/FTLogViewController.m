//
//  FTLogViewController.m
//  iJenkins
//
//  Created by Ondrej Rafaj on 04/10/2013.
//  Copyright (c) 2013 Ridiculous Innovations. All rights reserved.
//

#import "FTLogViewController.h"

#if TARGET_OS_IOS || (TARGET_OS_IPHONE && !TARGET_OS_TV)

#import <MessageUI/MFMailComposeViewController.h>


@interface FTLogViewController () <MFMailComposeViewControllerDelegate>

@property (nonatomic, strong) UIToolbar *toolbar;

#elif TARGET_OS_TV

@interface FTLogViewController ()

#endif


@property (nonatomic, strong) UITextView *textView;

@property (nonatomic, strong) NSString *jobName;
@property (nonatomic) NSInteger buildNumber;

@property (nonatomic, strong) NSMutableData *data;

@property (nonatomic) NSInteger errorCount;

@end


@implementation FTLogViewController


#pragma mark Data

- (void)loadData {
    [self createSpinner];
    FTAPIBuildConsoleOutputDataObject *loadObject = [[FTAPIBuildConsoleOutputDataObject alloc] initWithJobName:_jobName andBuildNumber:_buildNumber];
    [[FTAPIConnector sharedConnector] connectWithObject:loadObject andOnCompleteBlock:^(id<FTAPIDataAbstractObject> dataObject, NSError *error) {
        if (error) {
            if (_errorCount <= 3) {
                _errorCount++;
                [self loadData];
            }
            else {
                
            }
        }
        else {
            [self createReloadButton];
            [_textView setText:loadObject.outputText];
            // TODO: Find better way to load data
            if ([loadObject.response.allHeaderFields objectForKey:@"X-More-Data"]) {
                [NSTimer scheduledTimerWithTimeInterval:0.5 target:self selector:@selector(loadData) userInfo:nil repeats:NO];
            }
            else {
                
            }
        }
    }];
}

#pragma mark Creating elements

- (void)createTextView {
    CGRect r = self.view.bounds;
    r.size.height -= 44;
    _textView = [[UITextView alloc] initWithFrame:r];
    
#if TARGET_OS_IOS || (TARGET_OS_IPHONE && !TARGET_OS_TV)
    [_textView setEditable:NO];
#endif
    
    [_textView setAutoresizingWidthAndHeight];
    [self.view addSubview:_textView];
}

- (void)createToolbar {
#if TARGET_OS_IOS || (TARGET_OS_IPHONE && !TARGET_OS_TV)
    CGRect frame, remain;
    CGRectDivide(self.view.bounds, &frame, &remain, 44, CGRectMaxYEdge);
    
    _toolbar = [[UIToolbar alloc] initWithFrame:frame];
    [_toolbar setAutoresizingMask:UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleTopMargin];
    [self.view addSubview:_toolbar];
    
    UIBarButtonItem *up = [[UIBarButtonItem alloc] initWithTitle:FTLangGet(@"Up") style:UIBarButtonItemStylePlain target:self action:@selector(scrollUp:)];
    UIBarButtonItem *down = [[UIBarButtonItem alloc] initWithTitle:FTLangGet(@"Down") style:UIBarButtonItemStylePlain target:self action:@selector(scrollDown:)];
    UIBarButtonItem *space = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFlexibleSpace target:nil action:nil];
    UIBarButtonItem *share = nil;
    if ([MFMailComposeViewController canSendMail]) {
        share = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemAction target:self action:@selector(share:)];
    }
    [_toolbar setItems:[NSArray arrayWithObjects:up, down, space, share, nil]];
#endif
}

- (void)createSpinner {
    UIActivityIndicatorView *ai = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:kUIActivityIndicatorViewStyle];
    [ai startAnimating];
    UIBarButtonItem *spin = [[UIBarButtonItem alloc] initWithCustomView:ai];
    [self.navigationItem setRightBarButtonItem:spin animated:YES];
}

- (void)createReloadButton {
    UIBarButtonItem *reload = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemRefresh target:self action:@selector(loadData)];
    [self.navigationItem setRightBarButtonItem:reload animated:YES];
}

- (void)createAllElements {
    [super createAllElements];
    
    [self createTextView];
    [self createToolbar];
}

#pragma mark Actions

- (void)scrollUp:(UIBarButtonItem *)sender {
    [_textView setContentOffset:CGPointMake(0, 0) animated:YES];
}

- (void)scrollDown:(UIBarButtonItem *)sender {
    CGFloat y = fabs(_textView.contentSize.height - 0);
    [_textView setContentOffset:CGPointMake(0, y) animated:YES];
}

- (void)share:(UIBarButtonItem *)sender {
#if TARGET_OS_IOS || (TARGET_OS_IPHONE && !TARGET_OS_TV)
    MFMailComposeViewController *c = [[MFMailComposeViewController alloc] init];
    [c setMailComposeDelegate:self];
    [c setSubject:[NSString stringWithFormat:@"%@ #%ld (%@)", FTLangGet(@"Jenkins build log "), (long)_buildNumber, _jobName]];
    [c setMessageBody:[NSString stringWithFormat:@"%@\n\n%@", FTLangGet(@"Generated by iJenkins for iOS"), _textView.text] isHTML:NO];
    [self presentViewController:c animated:YES completion:nil];
#endif
}

#pragma mark Initialization

- (id)initWithJobName:(NSString *)jobName andBuildNumber:(NSInteger)buildNumber {
    self = [super init];
    if (self) {
        [self setTitle:FTLangGet(@"Build log")];
        
        _jobName = jobName;
        _buildNumber = buildNumber;
        _errorCount = 0;
        
        [self loadData];
    }
    return self;
}

#pragma mark Mail delegate methods

#if TARGET_OS_IOS || (TARGET_OS_IPHONE && !TARGET_OS_TV)
- (void)mailComposeController:(MFMailComposeViewController *)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError *)error {
    [controller dismissViewControllerAnimated:YES completion:^{
        // TODO: Create global sliding notification system and inform user about the action when view is dissmissed
        if (result == MFMailComposeResultSent) {
            
        }
        else if (result == MFMailComposeResultFailed) {
            
        }
        else if (result == MFMailComposeResultSaved) {
            
        }
        else if (result == MFMailComposeResultCancelled) {
            
        }
    }];
}
#endif


@end
